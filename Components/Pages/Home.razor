@page "/"
@rendermode InteractiveServer
@using VSENDS.Services

<PageTitle>Home</PageTitle>

<header class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom">
	<!-- 1 column -->
	<div class="col-md-3 justify-content-center align-items-center">
		<button class="iconButton"><i class="bi bi-list"></i></button>
		<img src="/favicon.png"/>
	</div>
	<!-- 2 column -->
	
	<div class="col-md-3">
		<input @bind="searchText" placeholder="Buscar"><span><i class="bi bi-search"></i></span>
	</div>
	<!-- 3 column -->
	<div class="col-md-3 text-end mr-4">

		<NavLink href="login"><button class="me-1 iconButton"><i class="bi bi-person-circle" /></button> </NavLink>
		<NavLink href="carrito"><button class="ms-1 iconButton"><i class="bi bi-cart3" /></button></NavLink>
	</div>
</header>
<div class="body">
	<div>
		<!-- CARROUSEL OR 3 IMAGES 30% WIDTH -->
		
	</div>
	<div class="p-3">
		<!-- Put the label with i18n and the filter -->
		<div>
			<h3>Listado de productos</h3> <!-- label first part-->
		</div>
		<!-- select end part -->
		
		<div class="d-flex justify-content-end mb-3">
			<select class="text-start" @bind="filterOption">
			@foreach (var option in filterOptions)
			{
				<option value="@option">@option</option>
			}
			</select>
		</div>
	</div>
	<div class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-between gap-4">
				@foreach (var producto in FiltrarProductos)
				{
					<a class="w-15 mb-5" href="/">
					<div class="container position-relative m-3"> <!-- CONTAINS 4 ROWS, 1 IMG, 2 TEXT 3 PRIZE 4 RATE-->
					<img src="@producto.ImagenUrl" class="img-fluid" style="width: 20vh; height: 28vh; object-fit: cover;" />
					</div>
					<div class="position-relative bottom-0 start-0 p-2">
					<p>@producto.Nombre</p>
					<p>@producto.Precio &#8364;</p>
						<!-- RATE LEFT, MAYBE WE ADD COLUMN IN PRODUCT OR TAKE INFO IN OTHER TABLE-->
					</div>
					</a>
				}
	</div>
</div>

@code{
	private string filterOption = "Ordenar por";

	private string searchText = "";
	List<Producto> productos = ProductoService.ObtenerProductos();
	List<string> filterOptions = new() 
	{
		"Relevancia", "Mayor precio", "Menor precio", 
		"Ordenar alfabeticamente (A-Z)", "Ordenar alfabeticamente (Z-A)"
	}; // filterOptional

	private List<Producto> FiltrarProductos => filterOption switch
	{
		"Relevancia" => productos.OrderBy(p => p.Id).ToList(),
		"Mayor precio" => productos.OrderByDescending(p => p.Precio).ToList(),
		"Menor precio" => productos.OrderBy(p => p.Precio).ToList(),
		"Ordenar alfabeticamente (A-Z)" => productos.OrderBy(p => p.Nombre).ToList(),
		"Ordenar alfabeticamente (Z-A)" => productos.OrderByDescending(p => p.Nombre).ToList(),
		_ => productos
	};

}